name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-22.04
    
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64" >> $GITHUB_ENV
        export JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk \
          python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev \
          libtinfo5 cmake libffi-dev libssl-dev \
          gettext
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade Cython==0.29.33
        pip install buildozer
        

    - name: Accept Android SDK licenses
      run: |
        mkdir -p ~/.android
        echo 'count=0' > ~/.android/repositories.cfg
        yes | ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager --licenses || true
        
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ matrix.arch }}-${{ hashFiles('buildozer.spec') }}
        
    - name: Cache Buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: buildozer-${{ matrix.arch }}-${{ hashFiles('buildozer.spec') }}
        
    - name: Update buildozer.spec for current architecture
      run: |
        sed -i "s/android.archs = .*/android.archs = ${{ matrix.arch }}/" buildozer.spec
        
    - name: Build with Buildozer
      run: |
        # Устанавливаем переменные окружения для автоматического принятия лицензий
        export ANDROID_ACCEPT_SDK_LICENSE=y
        export ANDROID_AUTO_ACCEPT_LICENSE=y
        # Запускаем сборку без yes команды
        buildozer android debug
      env:
        GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ matrix.arch }}
        path: bin/*.apk
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
